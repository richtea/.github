# https://localheinz.com/articles/2022/01/24/creating-releases-with-github-actions/
# https://docs.github.com/en/actions/creating-actions/creating-a-composite-action
# https://docs.github.com/en/actions/creating-actions/metadata-syntax-for-github-actions#inputs
# https://docs.github.com/en/actions/creating-actions/metadata-syntax-for-github-actions#runs-for-composite-run-steps-actions
# https://docs.github.com/en/rest/releases/releases#create-a-release
# https://docs.github.com/en/developers/webhooks-and-events/webhooks/webhook-events-and-payloads#push
# https://github.com/actions/create-release

# NOTE: Any workflow that uses this action needs content: write permission

name: "Create a release"

description: "Creates a release"

inputs:
  github-token:
    description: "GitHub token of a user with permission to create a release"
    required: true
  tag-name:
    description: "The name of the tag for this release"
    required: true
  release-name:
    description: "The name of the release. Default: `Release {tag-name}`"
    required: false
  body:
    description: "Text describing the contents of the release"
    required: true
  draft:
    description: "`true` to create a draft (unpublished) release, `false` to create a published one. Default: `false`"
    required: false
    default: "false"
  prerelease:
    description: "`true` to identify the release as a prerelease. `false` to identify the release as a full release. Default: `false`"
    default: "false"

outputs:
  id:
    description: "The release ID"
    value: ${{ steps.create-release.outputs.id }}
  html-url:
    description: "The URL users can navigate to in order to view the release. e.g. `https://github.com/octocat/Hello-World/releases/v1.0.0`"
    value: ${{ steps.create-release.outputs.html-url }}
  upload-url:
    description: >-
      The URL for uploading assets to the release, which could be used by GitHub Actions for additional uses,
      for example the [@actions/upload-release-asset](https://www.github.com/actions/upload-release-asset) GitHub Action
    value: ${{ steps.create-release.outputs.upload-url }}
runs:
  using: "composite"

  steps:
    - id: create-release
      name: "Create release"
      uses: "actions/github-script@v7.0.1"
      env:
        INPUT_TAG-NAME: "${{ inputs.tag-name }}"
        INPUT_RELEASE-NAME: "${{ inputs.release-name }}"
        INPUT_BODY: "${{ inputs.body }}"
        INPUT_DRAFT: "${{ inputs.draft }}"
        INPUT_PRERELEASE: "${{ inputs.prerelease }}"
      with:
        github-token: "${{ inputs.github-token }}"
        script: |
          const tag_name = core.getInput("tag-name", { required: true });
          const release_name = core.getInput("release-name") || `Release ${tag_name}`;
          const body = core.getInput("body", { required: true });
          const prerelease = core.getBooleanInput("prerelease");
          const draft = core.getBooleanInput("draft");

          try {
              const response = await github.rest.repos.createRelease({
                owner: context.repo.owner,
                repo: context.repo.repo,
                tag_name: tag_name,
                name: release_name,
                body: body,
                draft: draft,
                prerelease: prerelease,
                target_commitish: context.sha
              });

              core.setOutput('html-url', response.data.html_url);
              core.setOutput('id', response.data.id);
              core.setOutput('upload-url', response.data.upload_url);
          } catch (error) {
              core.setFailed(error.message);
          }
